{"version":3,"sources":["App.tsx","data/charactersDataHandler.ts","components/Character.tsx","container/CharactersContainer.tsx","routes/Classment.tsx","container/VoteContainer.tsx","routes/Vote.tsx","index.tsx"],"names":["pages","App","React","anchorElNav","setAnchorElNav","Container","fixed","AppBar","position","maxWidth","Toolbar","disableGutters","Typography","variant","noWrap","component","sx","mr","display","xs","md","Box","flexGrow","IconButton","size","onClick","event","currentTarget","color","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","page","to","MenuItem","textAlign","Button","my","serverUrl","voteForCharacter","data","a","axios","put","result","fetchCharacters","get","results","Character","props","character","ListItem","alignItems","ListItemAvatar","Avatar","alt","name","src","pic","ListItemText","primary","secondary","Grid","container","rowSpacing","columnSpacing","sm","item","homeworld","fontWeight","votes","Divider","CharactersContainer","characters","List","width","bgcolor","paddingTop","elem","Classment","useState","setData","isLoading","setLoading","useEffect","fetchData","reverse","marginTop","LinearProgress","VoteContainer","char1","char2","voteIsDone","setVote","MySwal","withReactContent","Swal","handleClick","char","fire","title","html","icon","console","log","style","Card","CardActionArea","CardMedia","image","height","CardContent","gutterBottom","CardActions","disabled","Vote","Math","floor","random","length","rootElement","document","getElementById","render","path","element"],"mappings":"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","file":"static/js/main.2cc6293d.chunk.js","sourcesContent":["import { Outlet, Link } from \"react-router-dom\";\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Button from \"@mui/material/Button\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\nconst pages = [\"classment\", \"vote\"];\nconst App: React.VFC<any> = () => {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n\n  const handleOpenNavMenu = (event: any) => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  return (\n    <Container fixed>\n      <AppBar position=\"sticky\">\n        <Container maxWidth=\"xl\">\n          <Toolbar disableGutters>\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"div\"\n              sx={{ mr: 2, display: { xs: \"none\", md: \"flex\" } }}\n            >\n              <strong>Star Wars Contest</strong>\n            </Typography>\n\n            <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\n              <IconButton\n                size=\"large\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleOpenNavMenu}\n                color=\"inherit\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorElNav}\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\",\n                }}\n                open={Boolean(anchorElNav)}\n                onClose={handleCloseNavMenu}\n                sx={{\n                  display: { xs: \"block\", md: \"none\" },\n                }}\n              >\n                {pages.map((page) => (\n                  <Link to={\"/\" + page}>\n                    <MenuItem key={page}>\n                      <Typography textAlign=\"center\">{page}</Typography>\n                    </MenuItem>\n                  </Link>\n                ))}\n              </Menu>\n            </Box>\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"div\"\n              sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}\n            >\n              <strong>Star Wars Contest</strong>\n            </Typography>\n            <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n              {pages.map((page) => (\n                <Link to={\"/\" + page}>\n                  <Button\n                    key={page}\n                    sx={{ my: 2, color: \"white\", display: \"block\" }}\n                  >\n                    {page}\n                  </Button>\n                </Link>\n              ))}\n            </Box>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <Container>\n        <Outlet />\n      </Container>\n    </Container>\n  );\n};\n\nexport default App;\n","import axios from \"axios\";\r\nconst serverUrl = \"http://backendmonisnap.kapger.com/characters\";\r\n\r\nexport interface CharacterUI {\r\n  _id?: string;\r\n  name: string;\r\n  pic: string;\r\n  homeworld: string;\r\n  votes: number;\r\n  __v?: number;\r\n}\r\n\r\nexport const voteForCharacter = async (data: any) => {\r\n  const result = (await axios.put(serverUrl, data)).data;\r\n  return result;\r\n};\r\n\r\nexport const fetchCharacters = async () => {\r\n  const results = (await axios.get(serverUrl)).data;\r\n  return results;\r\n};\r\n","import * as React from \"react\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { CharacterUI } from \"../data/charactersDataHandler\";\r\n\r\ninterface Props {\r\n  character: CharacterUI;\r\n}\r\n\r\nconst Character: React.VFC<Props> = (props: Props) => {\r\n  const { character } = props;\r\n  return (\r\n    <>\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemAvatar>\r\n          <Avatar alt={character.name} src={character.pic} />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary={character.name}\r\n          secondary={\r\n            <React.Fragment>\r\n              <Grid\r\n                container\r\n                rowSpacing={1}\r\n                columnSpacing={{ xs: 1, sm: 2, md: 3 }}\r\n              >\r\n                <Grid item xs={6}>\r\n                  <Typography\r\n                    sx={{ display: \"inline\" }}\r\n                    component=\"span\"\r\n                    variant=\"body2\"\r\n                    color=\"text.primary\"\r\n                  >\r\n                    {character.homeworld ? character.homeworld : \"No homeworld\"}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", fontWeight: \"bold\" }}\r\n                    component=\"span\"\r\n                    variant=\"body2\"\r\n                    color=\"orange\"\r\n                  >\r\n                    {`Votes: ${character.votes}`}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Character;\r\n","import * as React from \"react\";\r\nimport List from \"@mui/material/List\";\r\nimport Character from \"../components/Character\";\r\nimport { CharacterUI } from \"../data/charactersDataHandler\";\r\n\r\ninterface Props {\r\n  characters: CharacterUI[];\r\n}\r\n\r\nconst CharactersContainer: React.VFC<Props> = (props: Props) => {\r\n  const { characters } = props;\r\n\r\n  return (\r\n    <List\r\n      sx={{ width: \"100%\", bgcolor: \"background.paper\", paddingTop: \"3rem\" }}\r\n    >\r\n      {characters.map((elem) => {\r\n        return <Character character={elem} />;\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default CharactersContainer;\r\n","import { fetchCharacters } from \"../data/charactersDataHandler\";\r\nimport React from \"react\";\r\nimport CharactersContainer from \"../container/CharactersContainer\";\r\nimport { Box, LinearProgress } from \"@mui/material\";\r\n\r\nconst Classment: React.VFC<any> = () => {\r\n  const [data, setData] = React.useState([]);\r\n  const [isLoading, setLoading] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (isLoading) {\r\n        const data = (await fetchCharacters()).reverse();\r\n        const isLoading = false;\r\n        setData(data);\r\n        setLoading(isLoading);\r\n      }\r\n    };\r\n    fetchData();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && (\r\n        <Box sx={{ width: \"100%\", marginTop: \"25px\" }}>\r\n          <LinearProgress />\r\n        </Box>\r\n      )}\r\n      {!isLoading && <CharactersContainer characters={data} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Classment;\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Grid,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Swal from \"sweetalert2\";\r\nimport * as React from \"react\";\r\nimport { CharacterUI, voteForCharacter } from \"../data/charactersDataHandler\";\r\n\r\ninterface Props {\r\n  char1: CharacterUI;\r\n  char2: CharacterUI;\r\n}\r\n\r\nconst VoteContainer: React.VFC<Props> = (props: Props) => {\r\n  const { char1, char2 } = props;\r\n  const [voteIsDone, setVote] = React.useState(false);\r\n  const MySwal = withReactContent(Swal);\r\n\r\n  const handleClick = async (char: any) => {\r\n    try {\r\n      char.votes += 1;\r\n      await voteForCharacter(char);\r\n      await MySwal.fire({\r\n        title: <strong>Good job!</strong>,\r\n        html: <i>Your vote has been submited!</i>,\r\n        icon: \"success\",\r\n      });\r\n      const voteIsDone = true;\r\n      setVote(voteIsDone);\r\n    } catch (error) {\r\n      console.log(char);\r\n      await MySwal.fire({\r\n        title: <strong>Error!</strong>,\r\n        html: <i>An error occured try again!</i>,\r\n        icon: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      rowSpacing={1}\r\n      columnSpacing={{ xs: 1, sm: 2, md: 3 }}\r\n      style={{ paddingTop: \"3rem\" }}\r\n    >\r\n      <Grid item xs={6}>\r\n        <Card sx={{ maxWidth: 345 }}>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              component=\"img\"\r\n              image={char1.pic}\r\n              height=\"340\"\r\n              alt={char1.name}\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                {char1.name}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                homeworld: <strong>{char1.homeworld}</strong>\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"orange\">\r\n                Votes: <strong>{char1.votes}</strong>\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              disabled={voteIsDone}\r\n              onClick={() => {\r\n                handleClick(char1);\r\n              }}\r\n            >\r\n              Vote for it\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Card sx={{ maxWidth: 345 }}>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              component=\"img\"\r\n              height=\"340\"\r\n              image={char2.pic}\r\n              alt={char2.name}\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                {char2.name}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                homeworld: <strong>{char2.homeworld}</strong>\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"orange\">\r\n                Votes: <strong>{char2.votes}</strong>\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              disabled={voteIsDone}\r\n              onClick={() => {\r\n                handleClick(char2);\r\n              }}\r\n            >\r\n              Vote for it\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default VoteContainer;\r\n","import { Box, LinearProgress } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport VoteContainer from \"../container/VoteContainer\";\r\nimport { fetchCharacters } from \"../data/charactersDataHandler\";\r\n\r\nconst Vote: React.VFC<any> = () => {\r\n  const [data, setData] = React.useState([]);\r\n  const [isLoading, setLoading] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (isLoading) {\r\n        const data = await fetchCharacters();\r\n        const isLoading = false;\r\n        setData(data);\r\n        setLoading(isLoading);\r\n      }\r\n    };\r\n    fetchData();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && (\r\n        <Box sx={{ width: \"100%\", marginTop: \"25px\" }}>\r\n          <LinearProgress />\r\n        </Box>\r\n      )}\r\n      {!isLoading && (\r\n        <VoteContainer\r\n          char1={data[Math.floor(Math.random() * data.length)]}\r\n          char2={data[Math.floor(Math.random() * data.length)]}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Vote;\r\n","import { render } from \"react-dom\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport App from \"./App\";\nimport Classment from \"./routes/Classment\";\nimport Vote from \"./routes/Vote\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route path=\"classment\" element={<Classment />} />\n        <Route path=\"vote\" element={<Vote />} />\n      </Route>\n    </Routes>\n  </BrowserRouter>,\n  rootElement\n);\n"],"sourceRoot":""}